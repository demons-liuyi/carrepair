<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.accp.mapper.MaterialrequireGoodMapper" >
  <resultMap id="BaseResultMap" type="com.accp.domain.MaterialrequireGood" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="requireid" property="requireid" jdbcType="INTEGER" />
    <result column="goodid" property="goodid" jdbcType="INTEGER" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="item" property="item" jdbcType="VARCHAR" />
    <result column="warehouse" property="warehouse" jdbcType="VARCHAR" />
    <result column="Isget" property="isget" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, requireid, goodid, count, item, warehouse, Isget
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.accp.domain.MaterialrequireGoodExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from materialrequire_good
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from materialrequire_good
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from materialrequire_good
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.accp.domain.MaterialrequireGoodExample" >
    delete from materialrequire_good
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.accp.domain.MaterialrequireGood" >
    insert into materialrequire_good (id, requireid, goodid, 
      count, item, warehouse, 
      Isget)
    values (#{id,jdbcType=INTEGER}, #{requireid,jdbcType=INTEGER}, #{goodid,jdbcType=INTEGER}, 
      #{count,jdbcType=INTEGER}, #{item,jdbcType=VARCHAR}, #{warehouse,jdbcType=VARCHAR}, 
      #{isget,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.accp.domain.MaterialrequireGood" >
    insert into materialrequire_good
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="requireid != null" >
        requireid,
      </if>
      <if test="goodid != null" >
        goodid,
      </if>
      <if test="count != null" >
        count,
      </if>
      <if test="item != null" >
        item,
      </if>
      <if test="warehouse != null" >
        warehouse,
      </if>
      <if test="isget != null" >
        Isget,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="requireid != null" >
        #{requireid,jdbcType=INTEGER},
      </if>
      <if test="goodid != null" >
        #{goodid,jdbcType=INTEGER},
      </if>
      <if test="count != null" >
        #{count,jdbcType=INTEGER},
      </if>
      <if test="item != null" >
        #{item,jdbcType=VARCHAR},
      </if>
      <if test="warehouse != null" >
        #{warehouse,jdbcType=VARCHAR},
      </if>
      <if test="isget != null" >
        #{isget,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.accp.domain.MaterialrequireGoodExample" resultType="java.lang.Integer" >
    select count(*) from materialrequire_good
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update materialrequire_good
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.requireid != null" >
        requireid = #{record.requireid,jdbcType=INTEGER},
      </if>
      <if test="record.goodid != null" >
        goodid = #{record.goodid,jdbcType=INTEGER},
      </if>
      <if test="record.count != null" >
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.item != null" >
        item = #{record.item,jdbcType=VARCHAR},
      </if>
      <if test="record.warehouse != null" >
        warehouse = #{record.warehouse,jdbcType=VARCHAR},
      </if>
      <if test="record.isget != null" >
        Isget = #{record.isget,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update materialrequire_good
    set id = #{record.id,jdbcType=INTEGER},
      requireid = #{record.requireid,jdbcType=INTEGER},
      goodid = #{record.goodid,jdbcType=INTEGER},
      count = #{record.count,jdbcType=INTEGER},
      item = #{record.item,jdbcType=VARCHAR},
      warehouse = #{record.warehouse,jdbcType=VARCHAR},
      Isget = #{record.isget,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.accp.domain.MaterialrequireGood" >
    update materialrequire_good
    <set >
      <if test="requireid != null" >
        requireid = #{requireid,jdbcType=INTEGER},
      </if>
      <if test="goodid != null" >
        goodid = #{goodid,jdbcType=INTEGER},
      </if>
      <if test="count != null" >
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="item != null" >
        item = #{item,jdbcType=VARCHAR},
      </if>
      <if test="warehouse != null" >
        warehouse = #{warehouse,jdbcType=VARCHAR},
      </if>
      <if test="isget != null" >
        Isget = #{isget,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.accp.domain.MaterialrequireGood" >
    update materialrequire_good
    set requireid = #{requireid,jdbcType=INTEGER},
      goodid = #{goodid,jdbcType=INTEGER},
      count = #{count,jdbcType=INTEGER},
      item = #{item,jdbcType=VARCHAR},
      warehouse = #{warehouse,jdbcType=VARCHAR},
      Isget = #{isget,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>