<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.accp.mapper.RescueMapper" >
  <resultMap id="BaseResultMap" type="com.accp.domain.Rescue" >
    <id column="number" property="number" jdbcType="VARCHAR" />
    <result column="carinfoid" property="carinfoid" jdbcType="INTEGER" />
    <result column="counselorid" property="counselorid" jdbcType="INTEGER" />
    <result column="rescueTeamid" property="rescueteamid" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="worktimes" property="worktimes" jdbcType="VARCHAR" />
    <result column="getman" property="getman" jdbcType="VARCHAR" />
    <result column="workdate" property="workdate" jdbcType="TIMESTAMP" />
    <result column="nowdate" property="nowdate" jdbcType="TIMESTAMP" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="car" property="car" jdbcType="VARCHAR" />
    <result column="liche" property="liche" jdbcType="REAL" />
    <result column="worktime" property="worktime" jdbcType="TIMESTAMP" />
    <result column="overtime" property="overtime" jdbcType="TIMESTAMP" />
    <result column="rescueaddress" property="rescueaddress" jdbcType="VARCHAR" />
    <result column="setter" property="setter" jdbcType="VARCHAR" />
    <result column="company" property="company" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="REAL" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="fault" property="fault" jdbcType="VARCHAR" />
    <result column="faultreasult" property="faultreasult" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    number, carinfoid, counselorid, rescueTeamid, type, worktimes, getman, workdate, 
    nowdate, address, car, liche, worktime, overtime, rescueaddress, setter, company, 
    price, remark, state, fault, faultreasult, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.accp.domain.RescueExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rescue
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from rescue
    where number = #{number,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from rescue
    where number = #{number,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.accp.domain.RescueExample" >
    delete from rescue
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.accp.domain.Rescue" >
    insert into rescue (number, carinfoid, counselorid, 
      rescueTeamid, type, worktimes, 
      getman, workdate, nowdate, 
      address, car, liche, worktime, 
      overtime, rescueaddress, setter, 
      company, price, remark, 
      state, fault, faultreasult, 
      status)
    values (#{number,jdbcType=VARCHAR}, #{carinfoid,jdbcType=INTEGER}, #{counselorid,jdbcType=INTEGER}, 
      #{rescueteamid,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{worktimes,jdbcType=VARCHAR}, 
      #{getman,jdbcType=VARCHAR}, #{workdate,jdbcType=TIMESTAMP}, #{nowdate,jdbcType=TIMESTAMP}, 
      #{address,jdbcType=VARCHAR}, #{car,jdbcType=VARCHAR}, #{liche,jdbcType=REAL}, #{worktime,jdbcType=TIMESTAMP}, 
      #{overtime,jdbcType=TIMESTAMP}, #{rescueaddress,jdbcType=VARCHAR}, #{setter,jdbcType=VARCHAR}, 
      #{company,jdbcType=VARCHAR}, #{price,jdbcType=REAL}, #{remark,jdbcType=VARCHAR}, 
      #{state,jdbcType=VARCHAR}, #{fault,jdbcType=VARCHAR}, #{faultreasult,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.accp.domain.Rescue" >
    insert into rescue
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="number != null" >
        number,
      </if>
      <if test="carinfoid != null" >
        carinfoid,
      </if>
      <if test="counselorid != null" >
        counselorid,
      </if>
      <if test="rescueteamid != null" >
        rescueTeamid,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="worktimes != null" >
        worktimes,
      </if>
      <if test="getman != null" >
        getman,
      </if>
      <if test="workdate != null" >
        workdate,
      </if>
      <if test="nowdate != null" >
        nowdate,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="car != null" >
        car,
      </if>
      <if test="liche != null" >
        liche,
      </if>
      <if test="worktime != null" >
        worktime,
      </if>
      <if test="overtime != null" >
        overtime,
      </if>
      <if test="rescueaddress != null" >
        rescueaddress,
      </if>
      <if test="setter != null" >
        setter,
      </if>
      <if test="company != null" >
        company,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="fault != null" >
        fault,
      </if>
      <if test="faultreasult != null" >
        faultreasult,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="number != null" >
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="carinfoid != null" >
        #{carinfoid,jdbcType=INTEGER},
      </if>
      <if test="counselorid != null" >
        #{counselorid,jdbcType=INTEGER},
      </if>
      <if test="rescueteamid != null" >
        #{rescueteamid,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="worktimes != null" >
        #{worktimes,jdbcType=VARCHAR},
      </if>
      <if test="getman != null" >
        #{getman,jdbcType=VARCHAR},
      </if>
      <if test="workdate != null" >
        #{workdate,jdbcType=TIMESTAMP},
      </if>
      <if test="nowdate != null" >
        #{nowdate,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="car != null" >
        #{car,jdbcType=VARCHAR},
      </if>
      <if test="liche != null" >
        #{liche,jdbcType=REAL},
      </if>
      <if test="worktime != null" >
        #{worktime,jdbcType=TIMESTAMP},
      </if>
      <if test="overtime != null" >
        #{overtime,jdbcType=TIMESTAMP},
      </if>
      <if test="rescueaddress != null" >
        #{rescueaddress,jdbcType=VARCHAR},
      </if>
      <if test="setter != null" >
        #{setter,jdbcType=VARCHAR},
      </if>
      <if test="company != null" >
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=REAL},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="fault != null" >
        #{fault,jdbcType=VARCHAR},
      </if>
      <if test="faultreasult != null" >
        #{faultreasult,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.accp.domain.RescueExample" resultType="java.lang.Integer" >
    select count(*) from rescue
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update rescue
    <set >
      <if test="record.number != null" >
        number = #{record.number,jdbcType=VARCHAR},
      </if>
      <if test="record.carinfoid != null" >
        carinfoid = #{record.carinfoid,jdbcType=INTEGER},
      </if>
      <if test="record.counselorid != null" >
        counselorid = #{record.counselorid,jdbcType=INTEGER},
      </if>
      <if test="record.rescueteamid != null" >
        rescueTeamid = #{record.rescueteamid,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.worktimes != null" >
        worktimes = #{record.worktimes,jdbcType=VARCHAR},
      </if>
      <if test="record.getman != null" >
        getman = #{record.getman,jdbcType=VARCHAR},
      </if>
      <if test="record.workdate != null" >
        workdate = #{record.workdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.nowdate != null" >
        nowdate = #{record.nowdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.car != null" >
        car = #{record.car,jdbcType=VARCHAR},
      </if>
      <if test="record.liche != null" >
        liche = #{record.liche,jdbcType=REAL},
      </if>
      <if test="record.worktime != null" >
        worktime = #{record.worktime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.overtime != null" >
        overtime = #{record.overtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rescueaddress != null" >
        rescueaddress = #{record.rescueaddress,jdbcType=VARCHAR},
      </if>
      <if test="record.setter != null" >
        setter = #{record.setter,jdbcType=VARCHAR},
      </if>
      <if test="record.company != null" >
        company = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=REAL},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.fault != null" >
        fault = #{record.fault,jdbcType=VARCHAR},
      </if>
      <if test="record.faultreasult != null" >
        faultreasult = #{record.faultreasult,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update rescue
    set number = #{record.number,jdbcType=VARCHAR},
      carinfoid = #{record.carinfoid,jdbcType=INTEGER},
      counselorid = #{record.counselorid,jdbcType=INTEGER},
      rescueTeamid = #{record.rescueteamid,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      worktimes = #{record.worktimes,jdbcType=VARCHAR},
      getman = #{record.getman,jdbcType=VARCHAR},
      workdate = #{record.workdate,jdbcType=TIMESTAMP},
      nowdate = #{record.nowdate,jdbcType=TIMESTAMP},
      address = #{record.address,jdbcType=VARCHAR},
      car = #{record.car,jdbcType=VARCHAR},
      liche = #{record.liche,jdbcType=REAL},
      worktime = #{record.worktime,jdbcType=TIMESTAMP},
      overtime = #{record.overtime,jdbcType=TIMESTAMP},
      rescueaddress = #{record.rescueaddress,jdbcType=VARCHAR},
      setter = #{record.setter,jdbcType=VARCHAR},
      company = #{record.company,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=REAL},
      remark = #{record.remark,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      fault = #{record.fault,jdbcType=VARCHAR},
      faultreasult = #{record.faultreasult,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.accp.domain.Rescue" >
    update rescue
    <set >
      <if test="carinfoid != null" >
        carinfoid = #{carinfoid,jdbcType=INTEGER},
      </if>
      <if test="counselorid != null" >
        counselorid = #{counselorid,jdbcType=INTEGER},
      </if>
      <if test="rescueteamid != null" >
        rescueTeamid = #{rescueteamid,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="worktimes != null" >
        worktimes = #{worktimes,jdbcType=VARCHAR},
      </if>
      <if test="getman != null" >
        getman = #{getman,jdbcType=VARCHAR},
      </if>
      <if test="workdate != null" >
        workdate = #{workdate,jdbcType=TIMESTAMP},
      </if>
      <if test="nowdate != null" >
        nowdate = #{nowdate,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="car != null" >
        car = #{car,jdbcType=VARCHAR},
      </if>
      <if test="liche != null" >
        liche = #{liche,jdbcType=REAL},
      </if>
      <if test="worktime != null" >
        worktime = #{worktime,jdbcType=TIMESTAMP},
      </if>
      <if test="overtime != null" >
        overtime = #{overtime,jdbcType=TIMESTAMP},
      </if>
      <if test="rescueaddress != null" >
        rescueaddress = #{rescueaddress,jdbcType=VARCHAR},
      </if>
      <if test="setter != null" >
        setter = #{setter,jdbcType=VARCHAR},
      </if>
      <if test="company != null" >
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=REAL},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="fault != null" >
        fault = #{fault,jdbcType=VARCHAR},
      </if>
      <if test="faultreasult != null" >
        faultreasult = #{faultreasult,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where number = #{number,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.accp.domain.Rescue" >
    update rescue
    set carinfoid = #{carinfoid,jdbcType=INTEGER},
      counselorid = #{counselorid,jdbcType=INTEGER},
      rescueTeamid = #{rescueteamid,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      worktimes = #{worktimes,jdbcType=VARCHAR},
      getman = #{getman,jdbcType=VARCHAR},
      workdate = #{workdate,jdbcType=TIMESTAMP},
      nowdate = #{nowdate,jdbcType=TIMESTAMP},
      address = #{address,jdbcType=VARCHAR},
      car = #{car,jdbcType=VARCHAR},
      liche = #{liche,jdbcType=REAL},
      worktime = #{worktime,jdbcType=TIMESTAMP},
      overtime = #{overtime,jdbcType=TIMESTAMP},
      rescueaddress = #{rescueaddress,jdbcType=VARCHAR},
      setter = #{setter,jdbcType=VARCHAR},
      company = #{company,jdbcType=VARCHAR},
      price = #{price,jdbcType=REAL},
      remark = #{remark,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      fault = #{fault,jdbcType=VARCHAR},
      faultreasult = #{faultreasult,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR}
    where number = #{number,jdbcType=VARCHAR}
  </update>
</mapper>