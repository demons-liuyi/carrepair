<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.accp.mapper.RepairMapper" >
  <resultMap id="BaseResultMap" type="com.accp.domain.Repair" >
    <id column="number" property="number" jdbcType="VARCHAR" />
    <result column="carinfoId" property="carinfoid" jdbcType="INTEGER" />
    <result column="counselorId" property="counselorid" jdbcType="INTEGER" />
    <result column="oil" property="oil" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="worktime" property="worktime" jdbcType="VARCHAR" />
    <result column="getman" property="getman" jdbcType="VARCHAR" />
    <result column="overworkdate" property="overworkdate" jdbcType="TIMESTAMP" />
    <result column="nowworkDate" property="nowworkdate" jdbcType="TIMESTAMP" />
    <result column="setter" property="setter" jdbcType="VARCHAR" />
    <result column="company" property="company" jdbcType="VARCHAR" />
    <result column="befor" property="befor" jdbcType="TIMESTAMP" />
    <result column="price" property="price" jdbcType="REAL" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="fault" property="fault" jdbcType="VARCHAR" />
    <result column="faultreasult" property="faultreasult" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    number, carinfoId, counselorId, oil, type, worktime, getman, overworkdate, nowworkDate, 
    setter, company, befor, price, remark, state, fault, faultreasult, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.accp.domain.RepairExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from repair
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from repair
    where number = #{number,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from repair
    where number = #{number,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.accp.domain.RepairExample" >
    delete from repair
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.accp.domain.Repair" >
    insert into repair (number, carinfoId, counselorId, 
      oil, type, worktime, 
      getman, overworkdate, nowworkDate, 
      setter, company, befor, 
      price, remark, state, 
      fault, faultreasult, status
      )
    values (#{number,jdbcType=VARCHAR}, #{carinfoid,jdbcType=INTEGER}, #{counselorid,jdbcType=INTEGER}, 
      #{oil,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{worktime,jdbcType=VARCHAR}, 
      #{getman,jdbcType=VARCHAR}, #{overworkdate,jdbcType=TIMESTAMP}, #{nowworkdate,jdbcType=TIMESTAMP}, 
      #{setter,jdbcType=VARCHAR}, #{company,jdbcType=VARCHAR}, #{befor,jdbcType=TIMESTAMP}, 
      #{price,jdbcType=REAL}, #{remark,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, 
      #{fault,jdbcType=VARCHAR}, #{faultreasult,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.accp.domain.Repair" >
    insert into repair
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="number != null" >
        number,
      </if>
      <if test="carinfoid != null" >
        carinfoId,
      </if>
      <if test="counselorid != null" >
        counselorId,
      </if>
      <if test="oil != null" >
        oil,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="worktime != null" >
        worktime,
      </if>
      <if test="getman != null" >
        getman,
      </if>
      <if test="overworkdate != null" >
        overworkdate,
      </if>
      <if test="nowworkdate != null" >
        nowworkDate,
      </if>
      <if test="setter != null" >
        setter,
      </if>
      <if test="company != null" >
        company,
      </if>
      <if test="befor != null" >
        befor,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="fault != null" >
        fault,
      </if>
      <if test="faultreasult != null" >
        faultreasult,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="number != null" >
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="carinfoid != null" >
        #{carinfoid,jdbcType=INTEGER},
      </if>
      <if test="counselorid != null" >
        #{counselorid,jdbcType=INTEGER},
      </if>
      <if test="oil != null" >
        #{oil,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="worktime != null" >
        #{worktime,jdbcType=VARCHAR},
      </if>
      <if test="getman != null" >
        #{getman,jdbcType=VARCHAR},
      </if>
      <if test="overworkdate != null" >
        #{overworkdate,jdbcType=TIMESTAMP},
      </if>
      <if test="nowworkdate != null" >
        #{nowworkdate,jdbcType=TIMESTAMP},
      </if>
      <if test="setter != null" >
        #{setter,jdbcType=VARCHAR},
      </if>
      <if test="company != null" >
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="befor != null" >
        #{befor,jdbcType=TIMESTAMP},
      </if>
      <if test="price != null" >
        #{price,jdbcType=REAL},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="fault != null" >
        #{fault,jdbcType=VARCHAR},
      </if>
      <if test="faultreasult != null" >
        #{faultreasult,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.accp.domain.RepairExample" resultType="java.lang.Integer" >
    select count(*) from repair
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update repair
    <set >
      <if test="record.number != null" >
        number = #{record.number,jdbcType=VARCHAR},
      </if>
      <if test="record.carinfoid != null" >
        carinfoId = #{record.carinfoid,jdbcType=INTEGER},
      </if>
      <if test="record.counselorid != null" >
        counselorId = #{record.counselorid,jdbcType=INTEGER},
      </if>
      <if test="record.oil != null" >
        oil = #{record.oil,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.worktime != null" >
        worktime = #{record.worktime,jdbcType=VARCHAR},
      </if>
      <if test="record.getman != null" >
        getman = #{record.getman,jdbcType=VARCHAR},
      </if>
      <if test="record.overworkdate != null" >
        overworkdate = #{record.overworkdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.nowworkdate != null" >
        nowworkDate = #{record.nowworkdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.setter != null" >
        setter = #{record.setter,jdbcType=VARCHAR},
      </if>
      <if test="record.company != null" >
        company = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.befor != null" >
        befor = #{record.befor,jdbcType=TIMESTAMP},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=REAL},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.fault != null" >
        fault = #{record.fault,jdbcType=VARCHAR},
      </if>
      <if test="record.faultreasult != null" >
        faultreasult = #{record.faultreasult,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update repair
    set number = #{record.number,jdbcType=VARCHAR},
      carinfoId = #{record.carinfoid,jdbcType=INTEGER},
      counselorId = #{record.counselorid,jdbcType=INTEGER},
      oil = #{record.oil,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      worktime = #{record.worktime,jdbcType=VARCHAR},
      getman = #{record.getman,jdbcType=VARCHAR},
      overworkdate = #{record.overworkdate,jdbcType=TIMESTAMP},
      nowworkDate = #{record.nowworkdate,jdbcType=TIMESTAMP},
      setter = #{record.setter,jdbcType=VARCHAR},
      company = #{record.company,jdbcType=VARCHAR},
      befor = #{record.befor,jdbcType=TIMESTAMP},
      price = #{record.price,jdbcType=REAL},
      remark = #{record.remark,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      fault = #{record.fault,jdbcType=VARCHAR},
      faultreasult = #{record.faultreasult,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.accp.domain.Repair" >
    update repair
    <set >
      <if test="carinfoid != null" >
        carinfoId = #{carinfoid,jdbcType=INTEGER},
      </if>
      <if test="counselorid != null" >
        counselorId = #{counselorid,jdbcType=INTEGER},
      </if>
      <if test="oil != null" >
        oil = #{oil,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="worktime != null" >
        worktime = #{worktime,jdbcType=VARCHAR},
      </if>
      <if test="getman != null" >
        getman = #{getman,jdbcType=VARCHAR},
      </if>
      <if test="overworkdate != null" >
        overworkdate = #{overworkdate,jdbcType=TIMESTAMP},
      </if>
      <if test="nowworkdate != null" >
        nowworkDate = #{nowworkdate,jdbcType=TIMESTAMP},
      </if>
      <if test="setter != null" >
        setter = #{setter,jdbcType=VARCHAR},
      </if>
      <if test="company != null" >
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="befor != null" >
        befor = #{befor,jdbcType=TIMESTAMP},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=REAL},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="fault != null" >
        fault = #{fault,jdbcType=VARCHAR},
      </if>
      <if test="faultreasult != null" >
        faultreasult = #{faultreasult,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where number = #{number,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.accp.domain.Repair" >
    update repair
    set carinfoId = #{carinfoid,jdbcType=INTEGER},
      counselorId = #{counselorid,jdbcType=INTEGER},
      oil = #{oil,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      worktime = #{worktime,jdbcType=VARCHAR},
      getman = #{getman,jdbcType=VARCHAR},
      overworkdate = #{overworkdate,jdbcType=TIMESTAMP},
      nowworkDate = #{nowworkdate,jdbcType=TIMESTAMP},
      setter = #{setter,jdbcType=VARCHAR},
      company = #{company,jdbcType=VARCHAR},
      befor = #{befor,jdbcType=TIMESTAMP},
      price = #{price,jdbcType=REAL},
      remark = #{remark,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      fault = #{fault,jdbcType=VARCHAR},
      faultreasult = #{faultreasult,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR}
    where number = #{number,jdbcType=VARCHAR}
  </update>
</mapper>