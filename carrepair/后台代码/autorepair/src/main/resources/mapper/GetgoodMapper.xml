<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.accp.mapper.GetgoodMapper">
  <resultMap id="BaseResultMap" type="com.accp.domain.Getgood">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="goodid" jdbcType="VARCHAR" property="goodid" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="item" jdbcType="VARCHAR" property="item" />
    <result column="priceType" jdbcType="VARCHAR" property="pricetype" />
    <result column="discountsPrice" jdbcType="DECIMAL" property="discountsprice" />
    <result column="wjid" jdbcType="VARCHAR" property="wjid" />
    <result column="warehouse" jdbcType="VARCHAR" property="warehouse" />
    <result column="isRepair" jdbcType="INTEGER" property="isrepair" />
    <result column="cause" jdbcType="VARCHAR" property="cause" />
    <result column="type" jdbcType="VARCHAR" property="type" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, goodid, count, item, priceType, discountsPrice, wjid, warehouse, isRepair, cause, 
    type
  </sql>
  <select id="selectByExample" parameterType="com.accp.domain.GetgoodExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from getgood
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from getgood
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from getgood
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.accp.domain.GetgoodExample">
    delete from getgood
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.accp.domain.Getgood">
    insert into getgood (id, goodid, count, 
      item, priceType, discountsPrice, 
      wjid, warehouse, isRepair, 
      cause, type)
    values (#{id,jdbcType=INTEGER}, #{goodid,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER}, 
      #{item,jdbcType=VARCHAR}, #{pricetype,jdbcType=VARCHAR}, #{discountsprice,jdbcType=DECIMAL}, 
      #{wjid,jdbcType=VARCHAR}, #{warehouse,jdbcType=VARCHAR}, #{isrepair,jdbcType=INTEGER}, 
      #{cause,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.accp.domain.Getgood">
    insert into getgood
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="goodid != null">
        goodid,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="item != null">
        item,
      </if>
      <if test="pricetype != null">
        priceType,
      </if>
      <if test="discountsprice != null">
        discountsPrice,
      </if>
      <if test="wjid != null">
        wjid,
      </if>
      <if test="warehouse != null">
        warehouse,
      </if>
      <if test="isrepair != null">
        isRepair,
      </if>
      <if test="cause != null">
        cause,
      </if>
      <if test="type != null">
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="goodid != null">
        #{goodid,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="item != null">
        #{item,jdbcType=VARCHAR},
      </if>
      <if test="pricetype != null">
        #{pricetype,jdbcType=VARCHAR},
      </if>
      <if test="discountsprice != null">
        #{discountsprice,jdbcType=DECIMAL},
      </if>
      <if test="wjid != null">
        #{wjid,jdbcType=VARCHAR},
      </if>
      <if test="warehouse != null">
        #{warehouse,jdbcType=VARCHAR},
      </if>
      <if test="isrepair != null">
        #{isrepair,jdbcType=INTEGER},
      </if>
      <if test="cause != null">
        #{cause,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.accp.domain.GetgoodExample" resultType="java.lang.Integer">
    select count(*) from getgood
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update getgood
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.goodid != null">
        goodid = #{record.goodid,jdbcType=VARCHAR},
      </if>
      <if test="record.count != null">
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.item != null">
        item = #{record.item,jdbcType=VARCHAR},
      </if>
      <if test="record.pricetype != null">
        priceType = #{record.pricetype,jdbcType=VARCHAR},
      </if>
      <if test="record.discountsprice != null">
        discountsPrice = #{record.discountsprice,jdbcType=DECIMAL},
      </if>
      <if test="record.wjid != null">
        wjid = #{record.wjid,jdbcType=VARCHAR},
      </if>
      <if test="record.warehouse != null">
        warehouse = #{record.warehouse,jdbcType=VARCHAR},
      </if>
      <if test="record.isrepair != null">
        isRepair = #{record.isrepair,jdbcType=INTEGER},
      </if>
      <if test="record.cause != null">
        cause = #{record.cause,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update getgood
    set id = #{record.id,jdbcType=INTEGER},
      goodid = #{record.goodid,jdbcType=VARCHAR},
      count = #{record.count,jdbcType=INTEGER},
      item = #{record.item,jdbcType=VARCHAR},
      priceType = #{record.pricetype,jdbcType=VARCHAR},
      discountsPrice = #{record.discountsprice,jdbcType=DECIMAL},
      wjid = #{record.wjid,jdbcType=VARCHAR},
      warehouse = #{record.warehouse,jdbcType=VARCHAR},
      isRepair = #{record.isrepair,jdbcType=INTEGER},
      cause = #{record.cause,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.accp.domain.Getgood">
    update getgood
    <set>
      <if test="goodid != null">
        goodid = #{goodid,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="item != null">
        item = #{item,jdbcType=VARCHAR},
      </if>
      <if test="pricetype != null">
        priceType = #{pricetype,jdbcType=VARCHAR},
      </if>
      <if test="discountsprice != null">
        discountsPrice = #{discountsprice,jdbcType=DECIMAL},
      </if>
      <if test="wjid != null">
        wjid = #{wjid,jdbcType=VARCHAR},
      </if>
      <if test="warehouse != null">
        warehouse = #{warehouse,jdbcType=VARCHAR},
      </if>
      <if test="isrepair != null">
        isRepair = #{isrepair,jdbcType=INTEGER},
      </if>
      <if test="cause != null">
        cause = #{cause,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.accp.domain.Getgood">
    update getgood
    set goodid = #{goodid,jdbcType=VARCHAR},
      count = #{count,jdbcType=INTEGER},
      item = #{item,jdbcType=VARCHAR},
      priceType = #{pricetype,jdbcType=VARCHAR},
      discountsPrice = #{discountsprice,jdbcType=DECIMAL},
      wjid = #{wjid,jdbcType=VARCHAR},
      warehouse = #{warehouse,jdbcType=VARCHAR},
      isRepair = #{isrepair,jdbcType=INTEGER},
      cause = #{cause,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>